{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Organization": {
      "type": "string",
      "metadata": {
        "description": "Org name. Example ('dpl')"
      }
    },
    "Product": {
      "type": "string",
      "metadata": {
        "description": "Product name. (Example 'tenzing')"
      }
    },
    "Environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "qa",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Used to determine naming convention for resources"
      }
    },
    "sql_server_connection_name": {
      "type": "String",
      "metadata": {
        "description": "Connection string name as found in appsettings.json (Example: 'DPLDatabase')"
      }
    },
    "sql_server_sa_password": {
      "type": "securestring",
      "metadata": {
        "description": "Initial database password. User defaults to server name. This password is required for server creation, but is not used otherwise"
      }
    }
  },
  "variables": {
    "resource_name_dashes": "[concat(toLower(parameters('Organization')), '-', toLower(parameters('Product')), '-', toLower(parameters('Environment')))]",
    "resource_name": "[concat(toLower(parameters('Organization')), toLower(parameters('Product')), toLower(parameters('Environment')))]",
    "serverfarms_name": "[concat('ASP-', variables('resource_name'), '-b115')]"
  },
  "resources": [
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2020-04-15",
      "name": "[variables('resource_name')]",
      "location": "Global",
      "sku": {
        "name": "Standard_Microsoft"
      },
      "kind": "cdn",
      "properties": {}
    },
    {
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-03-01",
      "name": "Application Insights Smart Detection",
      "location": "Global",
      "properties": {
        "groupShortName": "SmartDetect",
        "enabled": true,
        "emailReceivers": [],
        "smsReceivers": [],
        "webhookReceivers": [],
        "itsmReceivers": [],
        "azureAppPushReceivers": [],
        "automationRunbookReceivers": [],
        "voiceReceivers": [],
        "logicAppReceivers": [],
        "azureFunctionReceivers": []
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('resource_name_dashes')]",
      "location": "centralus",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "RetentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2019-06-01-preview",
      "name": "[variables('resource_name_dashes')]",
      "location": "centralus",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[variables('resource_name_dashes')]",
        "administratorLoginPassword": "[parameters('sql_server_sa_password')]",
        "version": "12.0",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[variables('resource_name')]",
      "location": "centralus",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('serverfarms_name')]",
      "location": "Central US",
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints",
      "apiVersion": "2020-04-15",
      "name": "[concat(variables('resource_name'), '/', variables('resource_name'))]",
      "location": "Global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', variables('resource_name'))]"
      ],
      "properties": {
        "originHostHeader": "[concat(variables('resource_name'), '.z19.web.core.windows.net')]",
        "contentTypesToCompress": [
          "text/plain",
          "text/html",
          "text/css",
          "text/javascript",
          "application/x-javascript",
          "application/javascript",
          "application/json",
          "application/xml"
        ],
        "isCompressionEnabled": true,
        "isHttpAllowed": true,
        "isHttpsAllowed": true,
        "queryStringCachingBehavior": "IgnoreQueryString",
        "origins": [
          {
            "name": "[concat(variables('resource_name'), '-blob-core-windows-net')]",
            "properties": {
              "hostName": "[concat(variables('resource_name'), '.z19.web.core.windows.net')]",
              "enabled": true
            }
          }
        ],
        "originGroups": [],
        "geoFilters": [],
        "urlSigningKeys": []
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/Default')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "isStorageSecondaryKeyInUse": false,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'))]",
      "location": "centralus",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "sku": {
        "name": "Basic",
        "tier": "Basic",
        "capacity": 5
      },
      "kind": "v12.0,user",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 2147483648,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false,
        "readScale": "Disabled",
        "storageAccountType": "GRS",
        "maintenanceConfigurationId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/master/Default')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/master/Default')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(variables('resource_name_dashes'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/master/current')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "status": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/master/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers/encryptionProtector",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/current')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "kind": "servicemanaged",
      "properties": {
        "serverKeyName": "ServiceManaged",
        "serverKeyType": "ServiceManaged"
      }
    },
    {
      "type": "Microsoft.Sql/servers/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "isStorageSecondaryKeyInUse": false,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/keys",
      "apiVersion": "2015-05-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/ServiceManaged')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "kind": "servicemanaged",
      "properties": {
        "serverKeyType": "ServiceManaged"
      }
    },
    {
      "type": "Microsoft.Sql/servers/securityAlertPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(variables('resource_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('resource_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(variables('resource_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('resource_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(variables('resource_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('resource_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('resource_name_dashes')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "location": "Central US",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('serverfarms_name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('resource_name'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('resource_name_dashes')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('microsoft.insights/components', variables('resource_name_dashes')), '2020-02-02-preview').ConnectionString]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "AzureWebJobsSecretStorageType",
              "value": "files"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('resource_name'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('resource_name')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "AppSettings:AccessTokenDatabaseTenantId",
              "value": "[subscription().tenantId]"
            },
            {
              "name": "AppSettings:AccessTokenDatabaseResource",
              "value": "https://database.windows.net/"
            }
          ],
          "connectionStrings": [
            {
              "name": "[parameters('sql_server_connection_name')]",
              "connectionString": "[concat('Server=tcp:', variables('resource_name_dashes'), '.database.windows.net,1433;Initial Catalog=',variables('resource_name_dashes'), ';Persist Security Info=False;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
              "type": "SQLServer"
            }
          ]
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_name'))]",
        "clientAffinityEnabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('resource_name_dashes')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_name'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('resource_name_dashes'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('resource_name_dashes'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AppSettings:AccessTokenDatabaseTenantId",
              "value": "[subscription().tenantId]"
            },
            {
              "name": "AppSettings:AccessTokenDatabaseResource",
              "value": "https://database.windows.net/"
            }
          ],
          "connectionStrings": [
            {
              "name": "[parameters('sql_server_connection_name')]",
              "connectionString": "[concat('Server=tcp:', variables('resource_name_dashes'), '.database.windows.net,1433;Initial Catalog=',variables('resource_name_dashes'), ';Persist Security Info=False;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
              "type": "SQLServer"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('resource_name_dashes'), '/web')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v5.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$', variables('resource_name_dashes'))]",
        "azureStorageAccounts": {},
        "scmType": "VSTSRM",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "cors": {
          "allowedOrigins": [
            "[concat('https://', variables('resource_name'), '.azureedge.net')]"
          ],
          "supportCredentials": true
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '.azurewebsites.net')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "siteName": "[variables('resource_name_dashes')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites/siteextensions",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('resource_name_dashes'), '/Microsoft.AspNetCore.AzureAppServices.SiteExtension')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('resource_name_dashes'))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints/origins",
      "apiVersion": "2020-04-15",
      "name": "[concat(variables('resource_name'), '/', variables('resource_name'), '/', variables('resource_name'), '-blob-core-windows-net')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/endpoints', variables('resource_name'), variables('resource_name'))]",
        "[resourceId('Microsoft.Cdn/profiles', variables('resource_name'))]"
      ],
      "properties": {
        "hostName": "[concat(variables('resource_name'), '.z19.web.core.windows.net')]",
        "enabled": true
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/CreateIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/DefragmentIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/DropIndex')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/advisors",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/ForceLastGoodPlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "autoExecuteValue": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/Default')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
      "apiVersion": "2017-10-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 7
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "retentionDays": 0,
        "isAzureMonitorTargetEnabled": false,
        "state": "Disabled",
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/Default')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "state": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
      "apiVersion": "2020-02-02-preview",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "state": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/current')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "status": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(variables('resource_name_dashes'), '/', variables('resource_name_dashes'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/databases', variables('resource_name_dashes'), variables('resource_name_dashes'))]",
        "[resourceId('Microsoft.Sql/servers', variables('resource_name_dashes'))]"
      ],
      "properties": {
        "recurringScans": {
          "isEnabled": false,
          "emailSubscriptionAdmins": true
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "name": "[concat(variables('resource_name'), '/default/$web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('resource_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('resource_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    }
  ]
}
