# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Deploy QA

env:
  AZURE_RESOURCE_GROUP: WestDAAT_QA           # set the resource grou name
  AZURE_FUNCTIONAPP_NAME: wade-westdaat-qa-fn # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: src/API          # set this to the path to your web app project
  AZURE_STORAGE_ACCOUNT_NAME: wadewestdaatqa  # set the storage account of static site
  AZURE_CDN_ENDPOINT_NAME: wadewestdaatqa     # set the storage account of static site
  AZURE_CDN_PROFILE_NAME: wadewestdaatqa      # set the cdn profile name
  DOTNET_VERSION: '6.0.x'                     # set this to the .NET Core version to use
  NODE_VERSION: '16.x'                        # set this to the node version to use


on:
  # push:
  #   branches:
  #     - develop
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]
  workflow_dispatch:

jobs:
  deploy-funtion-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/API/WesternStatesWater.WestDaat.Client.Functions

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Build Function App'
        run: dotnet build --configuration Release --output ./output

      - name: 'Deploy Function App'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '/output'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_QA }}

  build-static-site:
    runs-on: ubuntu-latest
    needs: build-api
    defaults:
      run:
        working-directory: src/DashboardUI

    steps:

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache-dependency-path: ./src/DashboardUI/package-lock.json
        cache: 'npm'
    - run: npm ci
    - run: npm run build

  deploy-static-site:
    runs-on: ubuntu-latest
    needs: build-site
    defaults:
      run:
        working-directory: src/DashboardUI

    steps:

      - uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_AZ_CLI_CREDENTIALS_QA }}

      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
              az storage blob upload-batch --account-name ${{ env.AZURE_STORAGE_ACCOUNT_NAME }} --auth-mode key -d '$web' -s ./build
      - name: Purge CDN endpoint
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az cdn endpoint purge --content-paths  "/*" --profile-name ${{ env.AZURE_CDN_PROFILE_NAME }} --name ${{ env.AZURE_CDN_ENDPOINT_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      - name: Azure cli logout
        run: |
              az logout
        if: always()

